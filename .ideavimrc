" neovim config
nmap gk :tabprevious<cr>
nmap gj :tabnext<cr>
nmap <space>tt :tabnew<cr><space>wf
nmap <space>vv :vs<cr><C-w>l
nmap <space>xx :split<cr><C-w>j
nmap <space>wL <c-w>30>
nmap <space>wH <c-w>30<
nmap <space>wJ <c-w>25+
nmap <space>wK <c-w>25-
nmap <script> <silent> <space>3 :copen 1000<cr>G:ColorHighlight!<cr>
nmap <script> <silent> <space>2 :call ToggleQuickfixList()<cr>
nmap <space>w <c-w>
nmap <space>w<cr> <c-w>r<c-w>h<c-w>60>
nmap 'w :wa!<CR>
nmap 'q :wq<CR>
nmap 'e :q!<CR>
nmap 'r :edit!<cr>
nmap 't :tabclose<cr>
nmap zj <C-d>
nmap zk <C-u>
nmap zh <C-e><C-e><C-e><C-e><C-e>jjjjj
nmap zl <C-y><C-y><C-y><C-y><C-y>kkkkk
nmap <C-j> <C-d>
nmap <C-k> <C-u>
nmap <C-h> <C-e><C-e><C-e><C-e><C-e>jjj
nmap <C-l> <C-y><C-y><C-y><C-y><C-y>kkk
nmap zi <C-i>
nmap zo <C-o>
nmap co :let @+=expand("%:t")<cr>
nmap cl :let @+=expand("%:t")<cr>:Dispatch! osascript ~/Projects/dotfiles/mac_scripts/intelliJ.scpt<cr>
nmap cO :let @+=expand("%:p")[-32:]<cr>
nmap cy :let @+=expand("%:p")<cr>
nmap ch :let @+=expand("%:h")<cr>
nmap cn :let @+=expand("%:t:r")<cr>
nmap cu viwcp
nmap c' vi'cp
nmap c" vi"cp
nmap <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<cr>
nmap <leader><C-\> :vsp <CR>:exec("tag ".expand("<cword>"))<cr>
nmap gv :vs<cr><c-w>lgd
nmap gV :vs<cr><c-w>lgf
nmap gs :sp<cr><c-w>lgd
nmap gS :sp<cr><c-w>lgf
nmap gt :tabnew<cr>zogd
nmap gT :tabnew<cr>zogf

" refer action list here:
" https://gist.github.com/zchee/9c78f91cc5ad771c1f5d

nmap <space>da :action Debug<cr>
nmap <space>ar :action Run<cr>
nmap <space>ca :action CloseAllEditorsButActive<cr>
nmap <space>vr :source ~/.ideavimrc<cr>
nmap s :action AceAction<cr>?
nmap <space>p :action GotoFile<CR>
nmap <leader>c :action GotoClass<CR>
nmap <leader>s :action GotoSymbol<CR>
nmap <leader>p :action RecentFiles<CR>
nmap zo :action Back<CR>
nmap zi :action Forward<CR>
nmap <F2> :action StepOver<cr>
nmap <F3> :action StepInto<cr>
nmap <F4> :action StepOut<cr>
nmap <F5> :action Resume<cr>
nmap <F6> :action Stop<cr>
nmap <F10> :action ToggleLineBreakpoint<cr>
nmap <space>dj :action EvaluateExpression<cr>
vmap <space>dj :action EvaluateExpression<cr>
nmap gk gT
nmap gj gt
